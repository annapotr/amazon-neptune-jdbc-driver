# Copyright <2020> Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.



name: Amazon Neptune JDBC Driver

on:
  # Trigger the workflow on push or pull request,
  # but only for the master and develop branch

  # ?????
  push:
    branches: [ master ]

jobs:
  build:
    env:
      SERVICE_REGION: us-east-1

    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repository
        uses: actions/checkout@v2
      - name: Check Out Submodule
        run: git submodule update --init --recursive
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Build Gremlin Client jar
        run: mvn -B verify --file ./amazon-neptune-tools/neptune-gremlin-client/gremlin-client/pom.xml
      - name: Build Neptune Export jar
        run: mvn -B verify --file ./amazon-neptune-tools/neptune-export/pom.xml
      - name: Build SQL-Gremlin jar
        run: mvn -B package --file ./sql-gremlin/pom.xml
      - name: Grant Execute Permission for gradlew
        run: chmod +x gradlew
      - name: Run tests with Gradle
        run: ./gradlew build
      - name: Build shadow jar with Gradle
        run: ./gradlew shadowJar
      - name: Copy Build
        if: always()
        run: |
          mkdir output
          mkdir output/jarfile
          mkdir output/reports
          mkdir output/testresults
          cp build/libs/*.jar output/jarfile
          cp -R build/reports output/reports
          cp build/test-results/test/*.xml output/testresults
      - name: Upload Build
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: output
          path: output
      - name: Upload to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}



          publish:
            name: Publish snapshots
            runs-on: ubuntu-latest
            needs: build
            steps:
              - name: Checkout Repository
                uses: actions/checkout@v1
              - name: Setup java
                uses: actions/setup-java@v1
                with:
                  java-version: 11
              - name: Cache Gradle Modules
                uses: actions/cache@v1
                with:
                  path: ~/.gradle/caches
                  key: gradle-caches-${{ hashFiles('**/*.gradle.kts') }}
              - name: Cache Gradle Wrapper
                uses: actions/cache@v1
                with:
                  path: ~/.gradle/wrapper
                  key: gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
              - name: Execute Gradle publish
                run: ./gradlew snapshot --stacktrace --info
                shell: bash
                env:
                  CI: true
                  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
                  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
                  GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
                  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
                  GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}